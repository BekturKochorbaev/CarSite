# Generated by Django 5.1.2 on 2024-11-11 09:32

import django.contrib.auth.models
import django.contrib.auth.validators
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
import phonenumber_field.modelfields
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Car',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('name_tr', models.CharField(max_length=100, null=True)),
                ('name_en', models.CharField(max_length=100, null=True)),
                ('year', models.PositiveSmallIntegerField(blank=True, null=True)),
                ('mileage', models.PositiveIntegerField(blank=True, null=True)),
                ('body', models.CharField(choices=[('sedan', 'Sedan'), ('hatchback', 'Hatchback'), ('suv', 'SUV'), ('coupe', 'Coupe'), ('convertible', 'Convertible'), ('wagon', 'Wagon'), ('pickup', 'Pickup'), ('van', 'Van'), ('minivan', 'Minivan'), ('crossover', 'Crossover'), ('roadster', 'Roadster'), ('targa', 'Targa'), ('limousine', 'Limousine'), ('microcar', 'Microcar'), ('offroad', 'Off-road'), ('truck', 'Truck')], max_length=50)),
                ('color', models.CharField(max_length=100)),
                ('engine', models.CharField(max_length=50)),
                ('gearbox', models.CharField(choices=[('automatic', 'automatic'), ('manual', 'manual')], max_length=10)),
                ('drive', models.CharField(choices=[('FWD', 'front'), ('RWD', 'rear'), ('AWD', '4wd')], max_length=5)),
                ('steering_wheel', models.CharField(choices=[('RIGHT', 'right'), ('LEFT', 'left')], max_length=6)),
                ('condition', models.CharField(max_length=50)),
                ('customs', models.CharField(choices=[('CUSTOMS_CLEARED', 'customs cleared'), ('CUSTOMS_NOT_CLEARED', 'customs not cleared')], max_length=20)),
                ('exchange', models.CharField(max_length=100)),
                ('active', models.BooleanField(default=True, verbose_name='в наличии')),
                ('region', models.CharField(max_length=100)),
                ('registration', models.CharField(max_length=100)),
                ('other', models.CharField(max_length=200)),
                ('description', models.TextField(verbose_name="Owner's comments")),
                ('description_tr', models.TextField(null=True, verbose_name="Owner's comments")),
                ('description_en', models.TextField(null=True, verbose_name="Owner's comments")),
                ('price_usd', models.DecimalField(decimal_places=2, max_digits=20)),
            ],
        ),
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('category', models.CharField(max_length=100, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='Mark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('car_mark', models.CharField(choices=[('toyota', 'Toyota'), ('honda', 'Honda'), ('bmw', 'BMW'), ('audi', 'Audi'), ('mercedes', 'Mercedes-Benz'), ('ford', 'Ford'), ('chevrolet', 'Chevrolet'), ('nissan', 'Nissan'), ('volkswagen', 'Volkswagen'), ('hyundai', 'Hyundai'), ('kia', 'Kia'), ('lexus', 'Lexus'), ('mazda', 'Mazda'), ('subaru', 'Subaru'), ('volvo', 'Volvo'), ('porsche', 'Porsche'), ('tesla', 'Tesla'), ('jaguar', 'Jaguar'), ('land_rover', 'Land Rover'), ('fiat', 'Fiat'), ('peugeot', 'Peugeot'), ('renault', 'Renault'), ('mitsubishi', 'Mitsubishi'), ('acura', 'Acura'), ('infiniti', 'Infiniti'), ('lincoln', 'Lincoln'), ('cadillac', 'Cadillac'), ('buick', 'Buick'), ('mini', 'Mini'), ('alfa_romeo', 'Alfa Romeo'), ('aston_martin', 'Aston Martin'), ('bentley', 'Bentley'), ('rolls_royce', 'Rolls-Royce'), ('ferrari', 'Ferrari'), ('lamborghini', 'Lamborghini'), ('maserati', 'Maserati'), ('mcLaren', 'McLaren'), ('bugatti', 'Bugatti'), ('pagani', 'Pagani')], max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='UserProfile',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('age', models.PositiveSmallIntegerField(blank=True, null=True, validators=[django.core.validators.MinValueValidator(15), django.core.validators.MaxValueValidator(80)])),
                ('phone_number', phonenumber_field.modelfields.PhoneNumberField(blank=True, max_length=128, null=True, region='KG')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='CarImage',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('image', models.ImageField(blank=True, null=True, upload_to='car_image/')),
                ('car', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='images', to='car.car')),
            ],
        ),
        migrations.AddField(
            model_name='car',
            name='car_mark',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='car_marks', to='car.mark'),
        ),
        migrations.CreateModel(
            name='Owner',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('owner_image', models.ImageField(blank=True, null=True, upload_to='owner_image/')),
                ('owner', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='owners', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='car',
            name='owner',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='car.owner'),
        ),
    ]
